var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
define(["require", "exports", "src/src-de-telekom/public"], function (require, exports, public_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Report = void 0;
    var Report = (function () {
        function Report(sequenceNumber, params) {
            var _this = this;
            this.startTime = 0;
            this.fullQuarterMs = 15 * 60 * 1000;
            this.params = params;
            this.sequenceNumber = sequenceNumber;
            var currentDate = new Date();
            var currentQuarterMilliseconds = (currentDate.getMinutes() % 15) * 60 * 1000 + currentDate.getSeconds() * 1000 + currentDate.getMilliseconds();
            var millisecondsToNextQuarter = this.fullQuarterMs - currentQuarterMilliseconds;
            var thisQuarterEndTime = currentDate.getTime() + millisecondsToNextQuarter;
            this.endTime = thisQuarterEndTime - (sequenceNumber * this.fullQuarterMs);
            this.startTime = this.endTime - this.fullQuarterMs;
            public_1.Logger.debug(function (log) { return log(public_1.LogMsg("Report index [" + sequenceNumber + "]: StartTime: " + new Date(_this.startTime).toTimeString() + ", EndTime: " + new Date(_this.endTime).toTimeString(), Report_1.TAG)); });
        }
        Report_1 = Report;
        Report.prototype.refreshValues = function () {
            var _this = this;
            var durationMs = new Date().getTime() - this.startTime;
            this.intervalCompletition = durationMs < this.fullQuarterMs ? durationMs / this.fullQuarterMs : 1;
            public_1.Logger.debug(function (log) { return log(public_1.LogMsg("Report index [" + _this.sequenceNumber + "] percentage " + _this.intervalCompletition, Report_1.TAG)); });
        };
        Report.prototype.isFinished = function () {
            var durationMs = new Date().getTime() - this.startTime;
            return durationMs >= this.fullQuarterMs;
        };
        Report.prototype.toString = function () {
            this.refreshValues();
            return "{\n                    \"StartTime\": \"" + (this.sequenceNumber > 0 ? this.startTime : 0) + "\",\n                    \"ReportDuration\": 900,\n                    \"StatCycle\": 900,\n                    \"SequenceNumber\": " + this.sequenceNumber + ",\n                    \"StatusInformation\": {\n                        \"DeviceID\": \"651b1b5b-90bb-4c53-9069-f1bae40f7c07\",\n                        \"SubscriberID\": \"\",\n                        \"IpAddress\": \"192.168.2.101\",\n                        \"DeviceModel\": \"MR401A\",\n                        \"DeviceSupplier\": \"Zenterio\",\n                        \"DeviceSoC\": \"14.21\",\n                        \"SubnetMask\": \"255.255.255.0\",\n                        \"DefaultGateway\": \"192.168.2.1\",\n                        \"DhcpRemainingLeaseTime\": 1813936,\n                        \"DeviceOS\": 35,\n                        \"RecordingMaster\": 1,\n                        \"ClientVersion\": 1,\n                        \"NtpServer\": \"appupidat11101.tu0.sngtv.t-online.de\",\n                        \"ScheduledUploadTime\": 0,\n                        \"AccessType\": \"Ethernet\",\n                        \"HdmiConnected\": 1,\n                        \"HdmiYearOfManufacture\": 2009,\n                        \"HdmiManufacturerID\": 19501,\n                        \"HdmiProductID\": 2566,\n                        \"InternalHddConnected\": 1,\n                        \"ExternalHddConnected\": 1,\n                        \"InternalHddModel\": \"\",\n                        \"InternalHddSerialNumber\": \"\",\n                        \"InternalHddFirmwareRevision\": \"\",\n                        \"InternalHddSmartHealthStatus\": \"\",\n                        \"CurrentTime\": " + new Date().getTime() + "\n                    },\n                    \"Initialization\": {\n                        \"BootTime\": 25,\n                        \"NetworkChangeNumber\": 1\n                    },\n                    \"Function\": {\n                        \"RecordingSuccess\": \"\",\n                        \"RecordingFail\": \"\"\n                    },\n                    \"Tuner\": {\n                        \"Ethernet\": {\n                            \"LinkSpeed\": \"1000F\",\n                            \"RtpUnicast\": {\n                                \"PacketsReceived\": 7134,\n                                \"PacketsExpected\": 7134,\n                                \"PacketsLost\": 0,\n                                \"PacketsErrored\": 0,\n                                \"PacketsOutage\": 0,\n                                \"HoleSizeInPacketsHistogram\": \"0,0,0,0,0,0\",\n                                \"SecondsReceived\": 7,\n                                \"SecondsExpected\": 7,\n                                \"SecondsLoss\": " + Math.round(this.intervalCompletition * this.params.liveTvUnicast.secondsLossMaxValue) + ",\n                                \"SecondsErrored\": " + Math.round(this.intervalCompletition * this.params.liveTvUnicast.secondsErroredMaxValue) + ",\n                                \"SecondsOutage\": " + Math.round(this.intervalCompletition * this.params.liveTvUnicast.outageSecondsMaxValue) + ",\n                                \"HoleSizeInSecondsHistogram\": \"0,0,0,0,0,0\",\n                                \"HolesLoss\": 0,\n                                \"HolesErrored\": 0,\n                                \"HolesOutage\": 0,\n                                \"LastUsedFccServer\": \"" + this.params.liveTvUnicast.fccServer + "\",\n                                \"LastUsedRetryServer\": \"" + this.params.liveTvUnicast.retryServer + "\"\n                            },\n                            \"RtpMulticast\": {\n                                \"PacketsReceived\": 122340,\n                                \"PacketsExpected\": 122340,\n                                \"PacketsLost\": 65544,\n                                \"PacketsErrored\": 0,\n                                \"PacketsOutage\": 0,\n                                \"HoleSizeInPacketsHistogram\": \"8,0,0,0,0,1\",\n                                \"SecondsReceived\": 153,\n                                \"SecondsExpected\": 153,\n                                \"SecondsLoss\": " + Math.round(this.intervalCompletition * this.params.liveTvMulticast.secondsLossMaxValue) + ",\n                                \"SecondsErrored\": " + Math.round(this.intervalCompletition * this.params.liveTvMulticast.secondsErroredMaxValue) + ",\n                                \"SecondsOutage\": " + Math.round(this.intervalCompletition * this.params.liveTvMulticast.outageSecondsMaxValue) + ",\n                                \"HoleSizeInSecondsHistogram\": \"9,0,0,0,0,0\",\n                                \"HolesLoss\": 9,\n                                \"HolesErrored\": 0,\n                                \"HolesOutage\": 0,\n                                \"MulticastJoinDelayHistogram\": \"" + this.params.liveTvMulticast.multicastJoinDelayHistogram + "\",\n                                \"LastUsedFccServer\": \"" + this.params.liveTvMulticast.fccServer + "\",\n                                \"LastUsedRetryServer\": \"" + this.params.liveTvMulticast.retryServer + "\"\n                            },\n                            \"HAS\": {\n                                \"ChunksReceivedHistogram\": \"\",\n                                \"ChunksExpectedHistogram\": \"\",\n                                \"ChunksAbortedHistogram\": \"\",\n                                \"ChunksUnavailableHistogram\": \"\",\n                                \"ProfileDownShifts\": 0,\n                                \"ProfileUpShifts\": 0,\n                                \"LastUsedChunkSource\": \"\"\n                            }\n                        }\n                    },\n                    \"LiveTV\": {\n                        \"Receiver\": {\n                            \"SecondsWithoutErrors\": 165,\n                            \"MediaStartError\": 0,\n                            \"MediaInterruptError\": 0,\n                            \"MediaChangeDelayHistogram\": \"" + this.params.receiver.mediaChangeDelayHistogram + "\",\n                            \"SecondsWithNoDataHistogram\": \"0,0,0,0,0,0\",\n                            \"SecondsWithErrorsHistogram\": \"0,0,0,0,0,0\",\n                            \"SD\": {\n                                \"SecondsWithoutErrors\": 0,\n                                \"MediaStartError\": \"\",\n                                \"MediaInterruptError\": 0,\n                                \"MediaChangeDelayHistogram\": \"\",\n                                \"SecondsWithNoDataHistogram\": \"0,0,0,0,0,0\",\n                                \"SecondsWithErrorsHistogram\": \"0,0,0,0,0,0\"\n                            },\n                            \"HD\": {\n                                \"SecondsWithoutErrors\": 165,\n                                \"MediaStartError\": \"\",\n                                \"MediaInterruptError\": 0,\n                                \"MediaChangeDelayHistogram\": \"\",\n                                \"SecondsWithNoDataHistogram\": \"0,0,0,0,0,0\",\n                                \"SecondsWithErrorsHistogram\": \"0,0,0,0,0,0\"\n                            },\n                            \"UHD\": {\n                                \"SecondsWithoutErrors\": 0,\n                                \"MediaStartError\": \"\",\n                                \"MediaInterruptError\": 0,\n                                \"MediaChangeDelayHistogram\": \"\",\n                                \"SecondsWithNoDataHistogram\": \"0,0,0,0,0,0\",\n                                \"SecondsWithErrorsHistogram\": \"0,0,0,0,0,0\"\n                            },\n                            \"Decoder\": {\n                                \"DecodedAudioFrames\": 0,\n                                \"DecodingAudioErrors\": 0,\n                                \"DecodedVideoFrames\": 0,\n                                \"LostVideoFrames\": 0\n                            }\n                        }\n                    },\n                    \"Recording\": {\n                        \"RTPUnicast\": {\n                            \"PacketsReceived\": 10393,\n                            \"PacketsExpected\": 10393,\n                            \"PacketsLoss\": 0,\n                            \"PacketsErrored\": 0,\n                            \"PacketsOutage\": 0,\n                            \"PacketHistogram\": \"0,0,0,0,0,0\",\n                            \"SecondsReceived\": 37,\n                            \"SecondsExpected\": 37,\n                            \"SecondsLoss\": 0,\n                            \"SecondsErrored\": 0,\n                            \"SecondsOutage\": 0,\n                            \"SecondHistogram\": \"0,0,0,0,0,0\",\n                            \"HoleLoss\": 0,\n                            \"HoleErrored\": 0,\n                            \"HoleOutage\": 0,\n                            \"LastUsedFccServer\": \"" + this.params.liveTvUnicast.fccServer + "\",\n                            \"LastUsedRetryServer\": \"" + this.params.liveTvUnicast.retryServer + "\"\n                        }\n                    },\n                    \"InstantRestart\": {\n                        \"Receiver\": {\n                            \"AVStreamBlockedByDRM\": 0,\n                            \"SecondsWithErrorsHistogram\": \"0,0,0,0,0,0\",\n                            \"SecondsWithNoDataHistogram\": \"0,0,0,1,0,0\",\n                            \"LipSyncSecondHistogram\": \"1,0,0,0,0,0\",\n                            \"SecondsWithoutErrors\": 21,\n                            \"MediaStartError\": 0,\n                            \"MediaInterruptError\": 0,\n                            \"MediaChangeDelayHistogram\": \"1,0,0,0,0,0\",\n                            \"MOSHistogram\": \"0,1,0,0,0,20\"\n                        },\n                        \"MediaPerformance\": {\n                            \"FrozenPictures\": 1,\n                            \"BlockArtifacts\": 0,\n                            \"LipSync\": 1\n                        },\n                        \"RTPUnicast\": {\n                            \"PacketsReceived\": 7358,\n                            \"PacketsExpected\": 19583,\n                            \"PacketsLoss\": 0,\n                            \"PacketsErrored\": 0,\n                            \"PacketsOutage\": 12225,\n                            \"PacketHistogram\": \"0,0,0,0,0,1\",\n                            \"SecondsReceived\": 21,\n                            \"SecondsExpected\": 66,\n                            \"SecondsLoss\": 0,\n                            \"SecondsErrored\": 0,\n                            \"SecondsOutage\": 45,\n                            \"SecondHistogram\": \"0,0,0,0,1,0\",\n                            \"HoleLoss\": 0,\n                            \"HoleErrored\": 0,\n                            \"HoleOutage\": 1,\n                            \"LastUsedFccServer\": \"" + this.params.liveTvUnicast.fccServer + "\",\n                            \"LastUsedRetryServer\": \"" + this.params.liveTvUnicast.retryServer + "\"\n                        },\n                        \"Decoder\": {\n                            \"DecodedVideoFrames\": 486,\n                            \"LostVideoFrames\": 0,\n                            \"DecodedAudioFrames\": 848,\n                            \"DecodingAudioErrors\": 0\n                        }\n                    }\n                }";
        };
        var Report_1;
        Report = Report_1 = __decorate([
            public_1.logTag()
        ], Report);
        return Report;
    }());
    exports.Report = Report;
});
//# sourceMappingURL=zacsqmreport.js.map